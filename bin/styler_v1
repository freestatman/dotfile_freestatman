#!/lrlhps/apps/R/R-3.3.3/bin/Rscript
#!/usr/local/bin/Rscript
#
# Description: cmd line as a R/styler wrapper tool, for quickly style up single R script, and automate archiving and comparison.
# Author: Freeman (Shuaicheng) Wang
# Date: 2017-12-10
#

.libPaths("/home/c182209/R/x86_64-pc-linux-gnu-library/3.3")
suppressMessages( library(argparser))
suppressMessages( library(stringr) )
suppressMessages( library(styler) )

# Create a parser
p <- arg_parser("Styler command: Non-invasive pretty printing of R code ")

# Add command line arguments
p <- add_argument(p, "rfile", help="R script to style up", type="character")
p <- add_argument(p, "--newfile", help="New script suffix", default='styled')

argv <- parse_args(p)
rfile_new <- gsub('\\.[r|R]$',
        paste0('_', argv$newfile, '.R'),
        argv$rfile)

rfile_new <- file.path(getwd(), str_replace(rfile_new, '^.*\\/', '')) # output to current working dir

suppressMessages(
        file.copy(argv$rfile, rfile_new, overwrite=TRUE)
)

tidyverse_style_swa <- function(...) tidyverse_style(indent_by=4, ...)
styler::style_file(rfile_new, style=tidyverse_style_swa)

message("compare re-styled scripts: before vs after:")
message(paste0("vimdiff ", argv$rfile, ' ', rfile_new))

quit(save="no")
